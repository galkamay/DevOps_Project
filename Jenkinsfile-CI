pipeline {
    agent { label 'docker' }
    environment {
        AWS_REGION = 'us-east-1'
        ECR_DJANGO_REPO = '992382545251.dkr.ecr.us-east-1.amazonaws.com/gal-alon-app-repo-ga:django-image-latest'
        ECR_NGINX_REPO = '992382545251.dkr.ecr.us-east-1.amazonaws.com/gal-alon-app-repo-ga:nginx-image-latest'
        AWS_CREDENTIALS_ID = 'aws-access-key-jenkins'
    }

    stages {
        stage('Build and Scan Django Image') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                        sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_DJANGO_REPO'
                        sh 'cp ./Docker-Files/Dockerfile-django ./Status-Page/Dockerfile'
                        sh 'cd ./Status-Page && docker build --platform linux/amd64 -t django-app:latest .'
                        sh 'docker tag django-app:latest $ECR_DJANGO_REPO'
                        sh 'docker push $ECR_DJANGO_REPO'
                        
                        // הגדלת ה-timeout לסריקת Trivy ל-5 דקות
                        sh 'trivy image --severity HIGH,CRITICAL --cache-dir /var/lib/trivy --timeout 5m $ECR_DJANGO_REPO'
                    }
                }
            }
        }

        stage('Build and Scan Nginx Image') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                        sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_NGINX_REPO'
                        sh 'cp ./Docker-Files/Dockerfile-nginx ./Status-Page/Dockerfile'
                        sh 'cd ./Status-Page && docker build --platform linux/amd64 -t nginx-app:latest .'
                        sh 'docker tag nginx-app:latest $ECR_NGINX_REPO'
                        sh 'docker push $ECR_NGINX_REPO'
                        
                        // הגדלת ה-timeout לסריקת Trivy ל-5 דקות
                        sh 'trivy image --severity HIGH,CRITICAL --cache-dir /var/lib/trivy --timeout 5m $ECR_NGINX_REPO'
                    }
                }
            }
        }

        stage('Remove All Docker Images') {
            steps {
                script {
                    sh '''
                        images=$(docker images -q)
                        if [ -n "$images" ]; then
                            docker rmi -f $images
                        else
                            echo "No images to delete"
                        fi
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'CI pipeline completed successfully!'
        }
        failure {
            echo 'CI pipeline failed.'
        }
    }
}
